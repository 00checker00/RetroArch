// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
float _placeholder30;
};
struct pass_2 {
float _placeholder34;
};
vec4 _oPosition1;
uniform mat4 MVPMatrix;
input_dummy _IN1;
vec4 _r0003;
attribute vec4 VertexCoord;
attribute vec4 TexCoord;
varying vec4 TEX0;
varying vec4 TEX1;
 

         mat4 transpose_(mat4 matrix)
         {
            mat4 ret;
            for (int i = 0; i < 4; i++)
               for (int j = 0; j < 4; j++)
                  ret[i][j] = matrix[j][i];

            return ret;
         }
         
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{
    mat4 MVPMatrix_ = transpose_(MVPMatrix);
    vec2 _oTexCoord;
    vec2 _oTexel;
    _r0003.x = dot(MVPMatrix_[0], VertexCoord);
    _r0003.y = dot(MVPMatrix_[1], VertexCoord);
    _r0003.z = dot(MVPMatrix_[2], VertexCoord);
    _r0003.w = dot(MVPMatrix_[3], VertexCoord);
    _oPosition1 = _r0003;
    _oTexCoord = TexCoord.xy;
    _oTexel = 1.00000000E+00/TextureSize;
    gl_Position = _r0003;
    TEX0.xy = TexCoord.xy;
    TEX1.xy = _oTexel;
} 
#elif defined(FRAGMENT)
#ifdef GL_ES
precision mediump float;
#endif
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
float _placeholder32;
};
struct pass_2 {
float _placeholder36;
};
vec4 _ret_0;
float _TMP10;
vec4 _TMP9;
float _TMP8;
vec4 _TMP7;
float _TMP6;
vec4 _TMP5;
vec3 _TMP11;
vec3 _TMP13;
vec3 _TMP12;
vec4 _TMP4;
vec4 _TMP2;
vec4 _TMP1;
vec4 _TMP0;
input_dummy _IN1;
pass_2 _PASS21;
uniform sampler2D COLOR_PALETTE;
uniform sampler2D BACKGROUND;
vec2 _c0023;
vec3 _x0041;
vec3 _TMP42;
varying vec4 TEX0;
varying vec4 TEX1;
 
uniform sampler2D Texture;
uniform sampler2D Pass2Texture;
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{
    vec4 _foreground;
    vec4 _background;
    vec4 _shadows;
    vec4 _out_color;
    _TMP0 = texture2D(Pass2Texture, TEX0.xy);
    _foreground = vec4(float(_TMP0.x), float(_TMP0.y), float(_TMP0.z), float(_TMP0.w));
    _TMP1 = texture2D(BACKGROUND, TEX0.xy);
    _background = vec4(float(_TMP1.x), float(_TMP1.y), float(_TMP1.z), float(_TMP1.w));
    _c0023 = TEX0.xy - vec2(TEX1.x, TEX1.y);
    _TMP2 = texture2D(Texture, _c0023);
    _shadows = vec4(float(_TMP2.x), float(_TMP2.y), float(_TMP2.z), float(_TMP2.w));
    _TMP4 = texture2D(COLOR_PALETTE, vec2( 2.50000000E-01, 5.00000000E-01));
    _foreground = vec4(float((vec4(float(_foreground.x), float(_foreground.y), float(_foreground.z), float(_foreground.w))*_TMP4).x), float((vec4(float(_foreground.x), float(_foreground.y), float(_foreground.z), float(_foreground.w))*_TMP4).y), float((vec4(float(_foreground.x), float(_foreground.y), float(_foreground.z), float(_foreground.w))*_TMP4).z), float((vec4(float(_foreground.x), float(_foreground.y), float(_foreground.z), float(_foreground.w))*_TMP4).w));
    _background = _background - (_background - 5.00000000E-01)*7.50000000E-01*float((_foreground.w > 0.00000000E+00));
    _TMP5 = texture2D(COLOR_PALETTE, vec2( 2.50000000E-01, 5.00000000E-01));
    _TMP6 = -1.00000000E+00 + _background.x*1.99902344E+00;
    _TMP7 = texture2D(COLOR_PALETTE, vec2( 2.50000000E-01, 5.00000000E-01));
    _TMP8 = -1.00000000E+00 + _background.y*1.99902344E+00;
    _TMP9 = texture2D(COLOR_PALETTE, vec2( 2.50000000E-01, 5.00000000E-01));
    _TMP10 = -1.00000000E+00 + _background.z*1.99902344E+00;
    _x0041 = vec3(float((_TMP5.x + float(_TMP6))), float((_TMP7.y + float(_TMP8))), float((_TMP9.z + float(_TMP10))));
    _TMP12 = min(vec3( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), vec3(float(_x0041.x), float(_x0041.y), float(_x0041.z)));
    _TMP11 = vec3(float(_TMP12.x), float(_TMP12.y), float(_TMP12.z));
    _TMP13 = max(vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), vec3(float(_TMP11.x), float(_TMP11.y), float(_TMP11.z)));
    _TMP42 = vec3(float(_TMP13.x), float(_TMP13.y), float(_TMP13.z));
    _background.xyz = _TMP42;
    _out_color = _shadows*_shadows.w*5.22460938E-01 + _background*(1.00000000E+00 - _shadows.w*5.22460938E-01);
    _out_color = _foreground*_foreground.w*9.50195312E-01 + _out_color*(1.00000000E+00 - _foreground.w*9.50195312E-01);
    _ret_0 = vec4(float(_out_color.x), float(_out_color.y), float(_out_color.z), float(_out_color.w));
    gl_FragColor = _ret_0;
    return;
} 
#endif
