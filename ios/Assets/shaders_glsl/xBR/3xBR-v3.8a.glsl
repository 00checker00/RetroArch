// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)
varying     vec4 VARt7;
varying     vec4 VARt6;
varying     vec4 VARt5;
varying     vec4 VARt4;
varying     vec4 VARt3;
varying     vec4 VARt2;
varying     vec4 VARt1;
varying     vec2 _texCoord1;
varying     vec4 _color1;
varying     vec4 _position1;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};
struct out_vertex {
    vec4 _position1;
    vec4 _color1;
    vec2 _texCoord1;
    vec4 VARt1;
    vec4 VARt2;
    vec4 VARt3;
    vec4 VARt4;
    vec4 VARt5;
    vec4 VARt6;
    vec4 VARt7;
};
out_vertex _ret_0;
float _TMP1;
uniform mat4 MVPMatrix;
input_dummy _IN1;
vec4 _r0007;
vec4 _v0007;
attribute vec4 VertexCoord;
attribute vec4 COLOR;
attribute vec4 TexCoord;
varying vec4 COL0;
varying vec4 TEX0;
 

         mat4 transpose_(mat4 matrix)
         {
            mat4 ret;
            for (int i = 0; i < 4; i++)
               for (int j = 0; j < 4; j++)
                  ret[i][j] = matrix[j][i];

            return ret;
         }
         
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{
    mat4 MVPMatrix_ = transpose_(MVPMatrix);
    out_vertex _OUT;
    vec2 _ps;
    _v0007 = vec4(float(VertexCoord.x), float(VertexCoord.y), float(VertexCoord.z), float(VertexCoord.w));
    _TMP1 = dot(vec4(float(MVPMatrix_[0].x), float(MVPMatrix_[0].y), float(MVPMatrix_[0].z), float(MVPMatrix_[0].w)), vec4(float(_v0007.x), float(_v0007.y), float(_v0007.z), float(_v0007.w)));
    _r0007.x = float(_TMP1);
    _TMP1 = dot(vec4(float(MVPMatrix_[1].x), float(MVPMatrix_[1].y), float(MVPMatrix_[1].z), float(MVPMatrix_[1].w)), vec4(float(_v0007.x), float(_v0007.y), float(_v0007.z), float(_v0007.w)));
    _r0007.y = float(_TMP1);
    _TMP1 = dot(vec4(float(MVPMatrix_[2].x), float(MVPMatrix_[2].y), float(MVPMatrix_[2].z), float(MVPMatrix_[2].w)), vec4(float(_v0007.x), float(_v0007.y), float(_v0007.z), float(_v0007.w)));
    _r0007.z = float(_TMP1);
    _TMP1 = dot(vec4(float(MVPMatrix_[3].x), float(MVPMatrix_[3].y), float(MVPMatrix_[3].z), float(MVPMatrix_[3].w)), vec4(float(_v0007.x), float(_v0007.y), float(_v0007.z), float(_v0007.w)));
    _r0007.w = float(_TMP1);
    _OUT._position1 = vec4(float(_r0007.x), float(_r0007.y), float(_r0007.z), float(_r0007.w));
    _ps = vec2(1.00000000E+00/TextureSize.x, 1.00000000E+00/TextureSize.y);
    _OUT.VARt1 = TexCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), float(float((-2.00000000E+00*_ps.y))));
    _OUT.VARt2 = TexCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), float(float(-_ps.y)));
    _OUT.VARt3 = TexCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), 0.00000000E+00);
    _OUT.VARt4 = TexCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), float(float(_ps.y)));
    _OUT.VARt5 = TexCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), float(float((2.00000000E+00*_ps.y))));
    _OUT.VARt6 = TexCoord.xyyy + vec4(float(float((-2.00000000E+00*_ps.x))), float(float(-_ps.y)), 0.00000000E+00, float(float(_ps.y)));
    _OUT.VARt7 = TexCoord.xyyy + vec4(float(float((2.00000000E+00*_ps.x))), float(float(-_ps.y)), 0.00000000E+00, float(float(_ps.y)));
    _ret_0._position1 = _OUT._position1;
    _ret_0._color1 = COLOR;
    _ret_0._texCoord1 = TexCoord.xy;
    VARt1 = _OUT.VARt1;
    VARt2 = _OUT.VARt2;
    VARt3 = _OUT.VARt3;
    VARt4 = _OUT.VARt4;
    VARt5 = _OUT.VARt5;
    VARt6 = _OUT.VARt6;
    VARt7 = _OUT.VARt7;
    gl_Position = _OUT._position1;
    COL0 = COLOR;
    TEX0.xy = TexCoord.xy;
    return;
    COL0 = _ret_0._color1;
    TEX0.xy = _ret_0._texCoord1;
} 
#elif defined(FRAGMENT)
#ifdef GL_ES
precision mediump float;
#endif
varying     vec4 VARt7;
varying     vec4 VARt6;
varying     vec4 VARt5;
varying     vec4 VARt4;
varying     vec4 VARt3;
varying     vec4 VARt2;
varying     vec4 VARt1;
varying     vec2 _texCoord;
varying     vec4 _color;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};
struct out_vertex {
    vec4 _color;
    vec2 _texCoord;
    vec4 VARt1;
    vec4 VARt2;
    vec4 VARt3;
    vec4 VARt4;
    vec4 VARt5;
    vec4 VARt6;
    vec4 VARt7;
};
vec4 _ret_0;
float _TMP46;
float _TMP45;
float _TMP44;
vec3 _TMP53;
vec3 _TMP43;
vec3 _TMP42;
vec3 _TMP41;
vec3 _TMP40;
vec3 _TMP39;
vec3 _TMP38;
vec3 _TMP37;
vec3 _TMP36;
vec4 _TMP35;
vec4 _TMP28;
vec4 _TMP27;
vec4 _TMP54;
float _TMP52;
vec4 _TMP20;
vec4 _TMP19;
vec4 _TMP18;
vec4 _TMP17;
vec4 _TMP16;
vec4 _TMP15;
vec4 _TMP14;
vec4 _TMP13;
vec4 _TMP12;
vec4 _TMP11;
vec4 _TMP10;
vec4 _TMP9;
vec4 _TMP8;
vec4 _TMP7;
vec4 _TMP6;
vec4 _TMP5;
vec4 _TMP4;
vec4 _TMP3;
vec4 _TMP2;
vec4 _TMP1;
vec4 _TMP0;
out_vertex _VAR1;
uniform sampler2D Texture;
input_dummy _IN1;
vec2 _x0068;
vec4 _r0112;
vec4 _r0122;
vec4 _r0132;
vec4 _r0142;
vec4 _r0152;
vec4 _r0162;
vec4 _x0174;
vec4 _TMP175;
vec4 _x0184;
vec4 _TMP185;
vec4 _x0194;
vec4 _TMP195;
vec4 _TMP203;
vec4 _a0206;
vec4 _TMP207;
vec4 _a0210;
vec4 _TMP211;
vec4 _a0214;
vec4 _TMP215;
vec4 _a0218;
vec4 _TMP219;
vec4 _a0222;
vec4 _TMP225;
vec4 _a0228;
vec4 _TMP229;
vec4 _a0232;
vec4 _TMP233;
vec4 _a0236;
vec4 _TMP237;
vec4 _a0240;
vec4 _TMP241;
vec4 _a0244;
vec4 _TMP245;
vec4 _a0248;
vec4 _TMP249;
vec4 _a0252;
vec4 _TMP253;
vec4 _a0256;
vec4 _TMP257;
vec4 _a0260;
vec4 _TMP261;
vec4 _a0264;
vec4 _TMP265;
vec4 _a0268;
float _t0274;
float _t0276;
vec3 _df0278;
vec3 _a0280;
vec3 _df0282;
vec3 _a0284;
varying vec4 TEX0;
 
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{
    bvec4 _edr;
    bvec4 _edr_left;
    bvec4 _edr_up;
    bvec4 _px;
    bvec4 _interp_restriction_lv1;
    bvec4 _interp_restriction_lv2_left;
    bvec4 _interp_restriction_lv2_up;
    bvec4 _nc;
    bvec4 _nc30;
    bvec4 _nc60;
    bvec4 _nc45;
    vec4 _fx;
    vec4 _fx_left;
    vec4 _fx_up;
    vec3 _res1;
    vec3 _res2;
    vec3 _pix1;
    vec3 _pix2;
    float _blend1;
    float _blend2;
    vec2 _fp;
    vec3 _A1;
    vec3 _B1;
    vec3 _C1;
    vec3 _A2;
    vec3 _B2;
    vec3 _C;
    vec3 _D;
    vec3 _E;
    vec3 _F;
    vec3 _G;
    vec3 _H;
    vec3 _I;
    vec3 _G5;
    vec3 _H5;
    vec3 _I5;
    vec3 _A0;
    vec3 _D0;
    vec3 _G0;
    vec3 _C4;
    vec3 _F4;
    vec3 _I4;
    vec4 _b1;
    vec4 _c3;
    vec4 _e1;
    vec4 _i4;
    vec4 _i5;
    vec4 _h5;
    vec4 _fx45;
    vec4 _fx30;
    vec4 _fx60;
    vec4 _final45;
    vec4 _final30;
    vec4 _final60;
    vec4 _maximo;
    vec3 _res;
    _x0068 = TEX0.xy*TextureSize;
    _fp = fract(_x0068);
    _TMP0 = texture2D(Texture, VARt1.xw);
    _A1 = vec3(float(_TMP0.x), float(_TMP0.y), float(_TMP0.z));
    _TMP1 = texture2D(Texture, VARt1.yw);
    _B1 = vec3(float(_TMP1.x), float(_TMP1.y), float(_TMP1.z));
    _TMP2 = texture2D(Texture, VARt1.zw);
    _C1 = vec3(float(_TMP2.x), float(_TMP2.y), float(_TMP2.z));
    _TMP3 = texture2D(Texture, VARt2.xw);
    _A2 = vec3(float(_TMP3.x), float(_TMP3.y), float(_TMP3.z));
    _TMP4 = texture2D(Texture, VARt2.yw);
    _B2 = vec3(float(_TMP4.x), float(_TMP4.y), float(_TMP4.z));
    _TMP5 = texture2D(Texture, VARt2.zw);
    _C = vec3(float(_TMP5.x), float(_TMP5.y), float(_TMP5.z));
    _TMP6 = texture2D(Texture, VARt3.xw);
    _D = vec3(float(_TMP6.x), float(_TMP6.y), float(_TMP6.z));
    _TMP7 = texture2D(Texture, VARt3.yw);
    _E = vec3(float(_TMP7.x), float(_TMP7.y), float(_TMP7.z));
    _TMP8 = texture2D(Texture, VARt3.zw);
    _F = vec3(float(_TMP8.x), float(_TMP8.y), float(_TMP8.z));
    _TMP9 = texture2D(Texture, VARt4.xw);
    _G = vec3(float(_TMP9.x), float(_TMP9.y), float(_TMP9.z));
    _TMP10 = texture2D(Texture, VARt4.yw);
    _H = vec3(float(_TMP10.x), float(_TMP10.y), float(_TMP10.z));
    _TMP11 = texture2D(Texture, VARt4.zw);
    _I = vec3(float(_TMP11.x), float(_TMP11.y), float(_TMP11.z));
    _TMP12 = texture2D(Texture, VARt5.xw);
    _G5 = vec3(float(_TMP12.x), float(_TMP12.y), float(_TMP12.z));
    _TMP13 = texture2D(Texture, VARt5.yw);
    _H5 = vec3(float(_TMP13.x), float(_TMP13.y), float(_TMP13.z));
    _TMP14 = texture2D(Texture, VARt5.zw);
    _I5 = vec3(float(_TMP14.x), float(_TMP14.y), float(_TMP14.z));
    _TMP15 = texture2D(Texture, VARt6.xy);
    _A0 = vec3(float(_TMP15.x), float(_TMP15.y), float(_TMP15.z));
    _TMP16 = texture2D(Texture, VARt6.xz);
    _D0 = vec3(float(_TMP16.x), float(_TMP16.y), float(_TMP16.z));
    _TMP17 = texture2D(Texture, VARt6.xw);
    _G0 = vec3(float(_TMP17.x), float(_TMP17.y), float(_TMP17.z));
    _TMP18 = texture2D(Texture, VARt7.xy);
    _C4 = vec3(float(_TMP18.x), float(_TMP18.y), float(_TMP18.z));
    _TMP19 = texture2D(Texture, VARt7.xz);
    _F4 = vec3(float(_TMP19.x), float(_TMP19.y), float(_TMP19.z));
    _TMP20 = texture2D(Texture, VARt7.xw);
    _I4 = vec3(float(_TMP20.x), float(_TMP20.y), float(_TMP20.z));
    _TMP52 = dot(vec3(float(_B2.x), float(_B2.y), float(_B2.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0112.x = float(_TMP52);
    _TMP52 = dot(vec3(float(_D.x), float(_D.y), float(_D.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0112.y = float(_TMP52);
    _TMP52 = dot(vec3(float(_H.x), float(_H.y), float(_H.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0112.z = float(_TMP52);
    _TMP52 = dot(vec3(float(_F.x), float(_F.y), float(_F.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0112.w = float(_TMP52);
    _b1 = vec4(float(_r0112.x), float(_r0112.y), float(_r0112.z), float(_r0112.w));
    _TMP52 = dot(vec3(float(_C.x), float(_C.y), float(_C.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0122.x = float(_TMP52);
    _TMP52 = dot(vec3(float(_A2.x), float(_A2.y), float(_A2.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0122.y = float(_TMP52);
    _TMP52 = dot(vec3(float(_G.x), float(_G.y), float(_G.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0122.z = float(_TMP52);
    _TMP52 = dot(vec3(float(_I.x), float(_I.y), float(_I.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0122.w = float(_TMP52);
    _c3 = vec4(float(_r0122.x), float(_r0122.y), float(_r0122.z), float(_r0122.w));
    _TMP52 = dot(vec3(float(_E.x), float(_E.y), float(_E.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0132.x = float(_TMP52);
    _TMP52 = dot(vec3(float(_E.x), float(_E.y), float(_E.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0132.y = float(_TMP52);
    _TMP52 = dot(vec3(float(_E.x), float(_E.y), float(_E.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0132.z = float(_TMP52);
    _TMP52 = dot(vec3(float(_E.x), float(_E.y), float(_E.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0132.w = float(_TMP52);
    _e1 = vec4(float(_r0132.x), float(_r0132.y), float(_r0132.z), float(_r0132.w));
    _TMP52 = dot(vec3(float(_I4.x), float(_I4.y), float(_I4.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0142.x = float(_TMP52);
    _TMP52 = dot(vec3(float(_C1.x), float(_C1.y), float(_C1.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0142.y = float(_TMP52);
    _TMP52 = dot(vec3(float(_A0.x), float(_A0.y), float(_A0.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0142.z = float(_TMP52);
    _TMP52 = dot(vec3(float(_G5.x), float(_G5.y), float(_G5.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0142.w = float(_TMP52);
    _i4 = vec4(float(_r0142.x), float(_r0142.y), float(_r0142.z), float(_r0142.w));
    _TMP52 = dot(vec3(float(_I5.x), float(_I5.y), float(_I5.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0152.x = float(_TMP52);
    _TMP52 = dot(vec3(float(_C4.x), float(_C4.y), float(_C4.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0152.y = float(_TMP52);
    _TMP52 = dot(vec3(float(_A1.x), float(_A1.y), float(_A1.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0152.z = float(_TMP52);
    _TMP52 = dot(vec3(float(_G0.x), float(_G0.y), float(_G0.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0152.w = float(_TMP52);
    _i5 = vec4(float(_r0152.x), float(_r0152.y), float(_r0152.z), float(_r0152.w));
    _TMP52 = dot(vec3(float(_H5.x), float(_H5.y), float(_H5.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0162.x = float(_TMP52);
    _TMP52 = dot(vec3(float(_F4.x), float(_F4.y), float(_F4.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0162.y = float(_TMP52);
    _TMP52 = dot(vec3(float(_B1.x), float(_B1.y), float(_B1.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0162.z = float(_TMP52);
    _TMP52 = dot(vec3(float(_D0.x), float(_D0.y), float(_D0.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0162.w = float(_TMP52);
    _h5 = vec4(float(_r0162.x), float(_r0162.y), float(_r0162.z), float(_r0162.w));
    _fx = vec4( 1.00000000E+00, -1.00000000E+00, -1.00000000E+00, 1.00000000E+00)*_fp.y + vec4( 1.00000000E+00, 1.00000000E+00, -1.00000000E+00, -1.00000000E+00)*_fp.x;
    _fx_left = vec4( 1.00000000E+00, -1.00000000E+00, -1.00000000E+00, 1.00000000E+00)*_fp.y + vec4( 5.00000000E-01, 2.00000000E+00, -5.00000000E-01, -2.00000000E+00)*_fp.x;
    _fx_up = vec4( 1.00000000E+00, -1.00000000E+00, -1.00000000E+00, 1.00000000E+00)*_fp.y + vec4( 2.00000000E+00, 5.00000000E-01, -2.00000000E+00, -5.00000000E-01)*_fp.x;
    _interp_restriction_lv1 = bvec4(_e1.x != _b1.w && _e1.x != _b1.z, _e1.y != _b1.x && _e1.y != _b1.w, _e1.z != _b1.y && _e1.z != _b1.x, _e1.w != _b1.z && _e1.w != _b1.y);
    _interp_restriction_lv2_left = bvec4(_e1.x != _c3.z && _b1.y != _c3.z, _e1.y != _c3.w && _b1.z != _c3.w, _e1.z != _c3.x && _b1.w != _c3.x, _e1.w != _c3.y && _b1.x != _c3.y);
    _interp_restriction_lv2_up = bvec4(_e1.x != _c3.x && _b1.x != _c3.x, _e1.y != _c3.y && _b1.y != _c3.y, _e1.z != _c3.z && _b1.z != _c3.z, _e1.w != _c3.w && _b1.w != _c3.w);
    _x0174 = (_fx - vec4( 1.10000002E+00, 9.99999940E-02, -8.99999976E-01, 9.99999940E-02))/vec4( 7.99999952E-01, 7.99999952E-01, 7.99999952E-01, 7.99999952E-01);
    _TMP54 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0174);
    _TMP175 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP54);
    _fx45 = _TMP175*_TMP175*(3.00000000E+00 - 2.00000000E+00*_TMP175);
    _x0184 = (_fx_left - vec4( 6.00000024E-01, 6.00000024E-01, -8.99999976E-01, -4.00000006E-01))/vec4( 7.99999952E-01, 7.99999952E-01, 7.99999952E-01, 8.00000012E-01);
    _TMP54 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0184);
    _TMP185 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP54);
    _fx30 = _TMP185*_TMP185*(3.00000000E+00 - 2.00000000E+00*_TMP185);
    _x0194 = (_fx_up - vec4( 1.60000002E+00, -4.00000006E-01, -1.39999998E+00, 9.99999940E-02))/vec4( 8.00000072E-01, 8.00000012E-01, 7.99999952E-01, 7.99999952E-01);
    _TMP54 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0194);
    _TMP195 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP54);
    _fx60 = _TMP195*_TMP195*(3.00000000E+00 - 2.00000000E+00*_TMP195);
    _a0206 = _e1 - _c3;
    _TMP203 = abs(_a0206);
    _a0210 = _e1 - _c3.zwxy;
    _TMP207 = abs(_a0210);
    _a0214 = _c3.wxyz - _h5;
    _TMP211 = abs(_a0214);
    _a0218 = _c3.wxyz - _h5.yzwx;
    _TMP215 = abs(_a0218);
    _a0222 = _b1.zwxy - _b1.wxyz;
    _TMP219 = abs(_a0222);
    _TMP27 = _TMP203 + _TMP207 + _TMP211 + _TMP215 + 4.00000000E+00*_TMP219;
    _a0228 = _b1.zwxy - _b1.yzwx;
    _TMP225 = abs(_a0228);
    _a0232 = _b1.zwxy - _i5;
    _TMP229 = abs(_a0232);
    _a0236 = _b1.wxyz - _i4;
    _TMP233 = abs(_a0236);
    _a0240 = _b1.wxyz - _b1;
    _TMP237 = abs(_a0240);
    _a0244 = _e1 - _c3.wxyz;
    _TMP241 = abs(_a0244);
    _TMP28 = _TMP225 + _TMP229 + _TMP233 + _TMP237 + 4.00000000E+00*_TMP241;
    _edr = bvec4(_TMP27.x < _TMP28.x && _interp_restriction_lv1.x, _TMP27.y < _TMP28.y && _interp_restriction_lv1.y, _TMP27.z < _TMP28.z && _interp_restriction_lv1.z, _TMP27.w < _TMP28.w && _interp_restriction_lv1.w);
    _a0248 = _b1.wxyz - _c3.zwxy;
    _TMP245 = abs(_a0248);
    _a0252 = _b1.zwxy - _c3;
    _TMP249 = abs(_a0252);
    _edr_left = bvec4((2.00000000E+00*_TMP245).x <= _TMP249.x && _interp_restriction_lv2_left.x, (2.00000000E+00*_TMP245).y <= _TMP249.y && _interp_restriction_lv2_left.y, (2.00000000E+00*_TMP245).z <= _TMP249.z && _interp_restriction_lv2_left.z, (2.00000000E+00*_TMP245).w <= _TMP249.w && _interp_restriction_lv2_left.w);
    _a0256 = _b1.wxyz - _c3.zwxy;
    _TMP253 = abs(_a0256);
    _a0260 = _b1.zwxy - _c3;
    _TMP257 = abs(_a0260);
    _edr_up = bvec4(_TMP253.x >= (2.00000000E+00*_TMP257).x && _interp_restriction_lv2_up.x, _TMP253.y >= (2.00000000E+00*_TMP257).y && _interp_restriction_lv2_up.y, _TMP253.z >= (2.00000000E+00*_TMP257).z && _interp_restriction_lv2_up.z, _TMP253.w >= (2.00000000E+00*_TMP257).w && _interp_restriction_lv2_up.w);
    _nc45 = bvec4(_edr.x && bool(_fx45.x), _edr.y && bool(_fx45.y), _edr.z && bool(_fx45.z), _edr.w && bool(_fx45.w));
    _nc30 = bvec4(_edr.x && _edr_left.x && bool(_fx30.x), _edr.y && _edr_left.y && bool(_fx30.y), _edr.z && _edr_left.z && bool(_fx30.z), _edr.w && _edr_left.w && bool(_fx30.w));
    _nc60 = bvec4(_edr.x && _edr_up.x && bool(_fx60.x), _edr.y && _edr_up.y && bool(_fx60.y), _edr.z && _edr_up.z && bool(_fx60.z), _edr.w && _edr_up.w && bool(_fx60.w));
    _a0264 = _e1 - _b1.wxyz;
    _TMP261 = abs(_a0264);
    _a0268 = _e1 - _b1.zwxy;
    _TMP265 = abs(_a0268);
    _px = bvec4(_TMP261.x <= _TMP265.x, _TMP261.y <= _TMP265.y, _TMP261.z <= _TMP265.z, _TMP261.w <= _TMP265.w);
    _nc = bvec4(_nc30.x || _nc60.x || _nc45.x, _nc30.y || _nc60.y || _nc45.y, _nc30.z || _nc60.z || _nc45.z, _nc30.w || _nc60.w || _nc45.w);
    _final45 = vec4(float(_nc45.x), float(_nc45.y), float(_nc45.z), float(_nc45.w))*_fx45;
    _final30 = vec4(float(_nc30.x), float(_nc30.y), float(_nc30.z), float(_nc30.w))*_fx30;
    _final60 = vec4(float(_nc60.x), float(_nc60.y), float(_nc60.z), float(_nc60.w))*_fx60;
    _TMP35 = max(_final30, _final60);
    _maximo = max(_TMP35, _final45);
    if (_nc.x) { 
        if (_px.x) { 
            _TMP36 = _F;
        } else {
            _TMP36 = _H;
        } 
        _pix1 = _TMP36;
        _blend1 = _maximo.x;
    } else {
        if (_nc.y) { 
            if (_px.y) { 
                _TMP37 = _B2;
            } else {
                _TMP37 = _F;
            } 
            _pix1 = _TMP37;
            _blend1 = _maximo.y;
        } else {
            if (_nc.z) { 
                if (_px.z) { 
                    _TMP38 = _D;
                } else {
                    _TMP38 = _B2;
                } 
                _pix1 = _TMP38;
                _blend1 = _maximo.z;
            } else {
                if (_nc.w) { 
                    if (_px.w) { 
                        _TMP39 = _H;
                    } else {
                        _TMP39 = _D;
                    } 
                    _pix1 = _TMP39;
                    _blend1 = _maximo.w;
                } 
            } 
        } 
    } 
    if (_nc.w) { 
        if (_px.w) { 
            _TMP40 = _H;
        } else {
            _TMP40 = _D;
        } 
        _pix2 = _TMP40;
        _blend2 = _maximo.w;
    } else {
        if (_nc.z) { 
            if (_px.z) { 
                _TMP41 = _D;
            } else {
                _TMP41 = _B2;
            } 
            _pix2 = _TMP41;
            _blend2 = _maximo.z;
        } else {
            if (_nc.y) { 
                if (_px.y) { 
                    _TMP42 = _B2;
                } else {
                    _TMP42 = _F;
                } 
                _pix2 = _TMP42;
                _blend2 = _maximo.y;
            } else {
                if (_nc.x) { 
                    if (_px.x) { 
                        _TMP43 = _F;
                    } else {
                        _TMP43 = _H;
                    } 
                    _pix2 = _TMP43;
                    _blend2 = _maximo.x;
                } 
            } 
        } 
    } 
    _t0274 = float(_blend1);
    _res1 = _E + _t0274*(_pix1 - _E);
    _t0276 = float(_blend2);
    _res2 = _E + _t0276*(_pix2 - _E);
    _a0280 = _E - _res1;
    _TMP53 = abs(vec3(float(_a0280.x), float(_a0280.y), float(_a0280.z)));
    _df0278 = vec3(float(_TMP53.x), float(_TMP53.y), float(_TMP53.z));
    _TMP44 = _df0278.x + _df0278.y + _df0278.z;
    _a0284 = _E - _res2;
    _TMP53 = abs(vec3(float(_a0284.x), float(_a0284.y), float(_a0284.z)));
    _df0282 = vec3(float(_TMP53.x), float(_TMP53.y), float(_TMP53.z));
    _TMP45 = _df0282.x + _df0282.y + _df0282.z;
    _TMP46 = float((_TMP45 >= _TMP44));
    _res = _res1 + _TMP46*(_res2 - _res1);
    _ret_0 = vec4(float(_res.x), float(_res.y), float(_res.z), 1.00000000E+00);
    gl_FragColor = _ret_0;
    return;
} 
#endif
